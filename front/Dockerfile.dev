# 가져올 이미지
FROM node:alpine
# 경로 설정
WORKDIR "/usr/src/app"
# package.json 을 WORKDIR에 복사 (.은 설정한 워킹 디렉토리를 뜻함)
COPY package.json ./
# 의존성 설치
RUN npm install
# 현재 피렉토리의 모든 파일을 도커 컨테이너의 워킹디렉토리에 복사한다.
COPY ./ ./
EXPOSE 3000
CMD ["npm", "start"]

# build 는 docker build -f [도커 파일 지정] -t [이미지 Repository] [dir이름 .은 현재 dir]
# docker image ls : 현재 도커 이미지 list 보기
# docker container ls : 현재 도커 컨테이너 list 보기
# docker는 OS같은 image와 이를 실행하는 container로 이루어져 있다.
# docker exec 는 -d의 옵션에서 해당 컨테이너 환경의 CMD를 띄우는 것
# docker exec -it [container-name] bash (bash shell 띄우기)
# -i는 표준입출력, -t는 가상의 tty를 통한 접속
# Volume은 도커 컨테이너의 개발환경에서 build -> stop -> remove -> build를 막기 위한 방법
# docker rum -v $(pwd)/src:/app/src -p 3000:3000 --name recommand-app react-image
# -v는 $(pwd)/src 폴더가 도커의 /app/src와 동기화 되도록 하는 것이다. (bindmount)